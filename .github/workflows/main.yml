name: The Bot Host

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "*/30 * * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Export terminal environment variable and set limit of usage and net limit
        run: |
          sudo apt install cpulimit
          export TERM=xterm
          ulimit -m 1024
          cpulimit --all -c 1 -v
          sudo apt-get install iproute2
          echo '#!/bin/bash' > network-limit.sh
          echo 'IFACE=$(ip link show | awk '\''/state UP/ {print $2}'\'' | sed '\''s/:$//'\'')'  >> network-limit.sh
          echo 'UPLOAD_LIMIT=5000  # 5 Mbit/s' >> network-limit.sh
          echo 'DOWNLOAD_LIMIT=15000  # 15 Mbit/s' >> network-limit.sh
          echo 'tc qdisc add dev $IFACE root tbf rate ${UPLOAD_LIMIT}kbit burst 640k latency 50ms' >> network-limit.sh
          echo 'tc qdisc add dev $IFACE handle 1: root htb default 10' >> network-limit.sh
          echo 'tc class add dev $IFACE parent 1: classid 1:10 htb rate ${DOWNLOAD_LIMIT}kbit' >> network-limit.sh
          chmod +x network-limit.sh
          sudo ./network-limit.sh &
          IFACE=$(ip link show | awk '/state UP/ {print $2}' | sed 's/:$//')
          sudo tc qdisc show dev $IFACE
      
      - name: Clone repository
        run: git clone https://github.com/GataNina-Li/GataBot-MD

      - name: Install project dependencies
        run: |
          cd GataBot-MD
          rm -rf package-lock.json && rm -rf node_modules && npm i

      - name: Start The Code
        run: |
          cd GataBot-MD
          node . &

      - name: Keep workflow running
        id: check_runs
        run: |
          echo "has_new_run=false" >> $GITHUB_OUTPUT
          while true; do
            sleep 10
            latest_run=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=1&status=queued&status=in_progress" | \
              jq -r '.workflow_runs[0].id')
            if [[ $latest_run != ${{ github.run_id }} ]]; then
              echo "has_new_run=true" >> $GITHUB_OUTPUT
              break
            fi
          done

      - name: Stop workflow if new run detected
        if: steps.check_runs.outputs.has_new_run == 'true'
        run: exit 0

      - name: Keep workflow running
        if: steps.check_runs.outputs.has_new_run == 'false'
        run: sleep 60
